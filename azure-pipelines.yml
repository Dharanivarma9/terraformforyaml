# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: TerraformInstaller@0
  displayName: 'terraform version'
  inputs:
    terraformVersion: '0.12.3'
- task: TerraformTaskV2@2
  displayName: 'terraform init'
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/crometerraform'
    backendServiceArm: 'myserviceconnectioncrome'
    backendAzureRmResourceGroupName: 'TestRG2'
    backendAzureRmStorageAccountName: 'storageaccount4747'
    backendAzureRmContainerName: 'newcontaineryml'
    backendAzureRmKey: 'dev.tfstate'
- task: TerraformTaskV2@2
  displayName: 'terraform validate'
  inputs:
    provider: 'azurerm'
    command: 'validate'
    workingDirectory: '$(System.DefaultWorkingDirectory)/crometerraform'
- task: TerraformTaskV2@2
  displayName: 'terraform plan'
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/crometerraform'
    environmentServiceNameAzureRM: 'myserviceconnectioncrome'
- task: TerraformTaskV2@2
  displayName: 'terraform apply'
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/crometerraform'
    environmentServiceNameAzureRM: 'myserviceconnectioncrome'




